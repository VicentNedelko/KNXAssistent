@page "/Components/InterfaceList"
@inject IBusCommunicator busCommunicator

@using DAL.Models
@using KNXManager.BusConnection


<h3>Available Interfaces</h3>
@if(KnxInterfaceList is null)
            {
                <Chase/>
            }
            else
            {
                if (KnxInterfaceList.Count() != 0)
                {
                    <MatList>
                        @foreach (var knxInterface in KnxInterfaceList)
                        {
                            <MatListItem>IP - @knxInterface.Ip</MatListItem>
                            <MatListItem>Name - @knxInterface.Name</MatListItem>
                            <MatListItem>MAC - @knxInterface.Mac</MatListItem>
                            <MatListItem>Address - @knxInterface.IndividualAddress</MatListItem><MatButton Raised="true" OnClick="@(e => SetActiveIntParams(knxInterface.Ip))">Choose</MatButton>
                            <MatListDivider></MatListDivider>
                        }
                    </MatList>
                }
                else
                {
                    <p>No Free Interfaces found.</p>
                }
            }


@code {

    [Parameter]
    public List<KnxInterface> KnxInterfaceList { get; set; }

    [Parameter]
    public EventCallback OnActiveIntChoose { get; set; }

    private async Task SetActiveIntParams(string ip)
    {
        var knxInt = busCommunicator.Interfaces.FirstOrDefault(i => i.IpAddress.ToString() == ip);
        if(knxInt is not null)
        {
            busCommunicator.SetInterface(ip);
            await OnActiveIntChoose.InvokeAsync();
        }
    }

}
