@page "/Bot/botMonitor";
@using DAL.Models
@using KNXManager.BusConnection

@inject IBusCommunicator busCommunicator

<h4>Bot Monitor Logger</h4>
@if (busCommunicator.bus is not null)
{
    <MatVirtualScroll style="height: 500px;" ItemType="string" Items="@items" ItemHeight="50">
        <ItemTemplate>
            <div>@context</div>
        </ItemTemplate>
    </MatVirtualScroll>
    <MatButton Raised="true" OnClick="@OnStartClick" Disabled="startBtnDsbl">Start</MatButton>
    <MatButton Outlined="true" OnClick="@OnStopClick" Disabled="stopBtnDsbl">Stop</MatButton>
}
else
{
    <Alert Color="Color.Warning" Visible>
        <AlertMessage>Warning!</AlertMessage>
        <AlertDescription>To establish KNX connection select active interface.</AlertDescription>
    </Alert>
}


@code {
    bool startBtnDsbl = false;
    bool stopBtnDsbl = false;

    [Parameter]
    public List<GaValue> gaValues { get; set; }

    public List<string> items;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        gaValues = busCommunicator.gaValues;
        items = new();
        stopBtnDsbl = true;
    }

    protected override void OnParametersSet()
    {
        foreach (var gaV in gaValues)
        {
            items.Add(string.Concat(gaV.Address.Address.ToString("G3"), " ", gaV.Type, " ", gaV.Value, " ", gaV.Unit, " ", gaV.Description));
        }
    }


    void OnStartClick()
    {
        busCommunicator.StartMonitor();
        startBtnDsbl = true;
        stopBtnDsbl = false;
    }

    void OnStopClick()
    {
        busCommunicator.StopMonitor();
        startBtnDsbl = false;
        stopBtnDsbl = true;
    }

}
